// Generated by CoffeeScript 1.10.0
module.exports.fragments_method = function(fragments_req) {
  return fragments_req.method;
};

module.exports.fragments_urlWithoutQuerystring = function(fragments_req) {
  return fragments_req.url.split('?')[0];
};

module.exports.fragments_query = function(fragments_req) {
  return fragments_req.query;
};

module.exports.fragments_body = function(fragments_req) {
  return fragments_req.body;
};

module.exports.fragments_userAgent = function(fragments_headerUserAgent) {
  return fragments_headerUserAgent;
};

module.exports.fragments_ip = function(fragments_headerXForwardedFor, fragments_req) {
  var forwardedForItems, lastItem;
  if (fragments_headerXForwardedFor != null) {
    forwardedForItems = fragments_headerXForwardedFor.split(',');
    lastItem = forwardedForItems[forwardedForItems.length - 1];
    return lastItem.trim();
  } else {
    return fragments_req.connection.remoteAddress;
  }
};

module.exports.fragments_isGzipEnabled = function(fragments_headerAcceptEncoding) {
  return function() {
    var acceptEncoding;
    acceptEncoding = fragments_headerAcceptEncoding;
    return (acceptEncoding != null) && -1 !== acceptEncoding.indexOf('gzip');
  };
};

module.exports.fragments_matchCurrentUrl = function(fragments_urlWithoutQuerystring, fragments_UrlPattern) {
  return function(pattern) {
    var patternObject;
    patternObject = new fragments_UrlPattern(pattern);
    return patternObject.match(fragments_urlWithoutQuerystring);
  };
};
