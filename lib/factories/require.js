// Generated by CoffeeScript 1.10.0
var slice = [].slice;

module.exports.fragments_http = function() {
  return require('http');
};

module.exports.fragments_net = function() {
  return require('net');
};

module.exports.fragments_fs = function(fragments_Promise) {
  return fragments_Promise.promisifyAll(require('fs'));
};

module.exports.fragments_path = function() {
  return require('path');
};

module.exports.fragments_url = function() {
  return require('url');
};

module.exports.fragments_crypto = function() {
  return require('crypto');
};

module.exports.fragments_querystring = function() {
  return require('querystring');
};

module.exports.fragments_childProcess = function(fragments_Promise) {
  return fragments_Promise.promisifyAll(require('child_process'));
};

module.exports.fragments_sequenz = function() {
  return require('sequenz');
};

module.exports.fragments_zuvor = function() {
  return require('zuvor');
};

module.exports.fragments_UrlPattern = function() {
  return require('url-pattern');
};

module.exports.fragments_passage = function() {
  return require('passage');
};

module.exports.fragments_kup = function(fragments_reactToHtml) {
  var K;
  K = require('kup');
  K.prototype.react = function() {
    var args;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    return this.unsafe(fragments_reactToHtml.apply(null, args));
  };
  return K;
};

module.exports.fragments_hinoki = function() {
  return require('hinoki');
};

module.exports.fragments_helfer = function() {
  return require('helfer');
};

module.exports.fragments_Promise = function() {
  return require('bluebird');
};

module.exports.fragments_lodash = function() {
  return require('lodash');
};

module.exports.fragments__ = function() {
  return require('lodash');
};

module.exports.fragments_redis = function() {
  return require('redis');
};

module.exports.fragments_bcrypt = function(fragments_Promise) {
  return fragments_Promise.promisifyAll(require('bcrypt'));
};

module.exports.fragments_uuid = function() {
  return require('node-uuid');
};

module.exports.fragments_react = function() {
  var react;
  react = require('react/addons');
  react.kup = require('react-kup');
  return react;
};

module.exports.fragments_jwt = function() {
  return require('jsonwebtoken');
};

module.exports.fragments_isjs = function() {
  return require('is_js');
};

module.exports.fragments_connect = function() {
  return require('connect');
};

module.exports.fragments_connectRedis = function() {
  return require('connect-redis');
};

module.exports.fragments_expressCompression = function() {
  return require('compression');
};

module.exports.fragments_expressServeStatic = function() {
  return require('serve-static');
};

module.exports.fragments_expressBodyParser = function() {
  return require('body-parser');
};

module.exports.fragments_queryParser = function(fragments_url) {
  var qs;
  qs = require('qs');
  return function(options) {
    return function(req, res, next) {
      var parsedUrl;
      if (req.query != null) {
        next();
        return;
      }
      if (req.url.indexOf('?') === -1) {
        req.query = {};
      } else {
        parsedUrl = fragments_url.parse(req.url);
        req.query = qs.parse(parsedUrl.query, options);
      }
      return next();
    };
  };
};

module.exports.fragments_expressCookieParser = function() {
  return require('cookie-parser');
};

module.exports.fragments_expressSession = function() {
  return require('express-session');
};

module.exports.fragments_basicAuth = function() {
  return require('basic-auth');
};

module.exports.fragments_expressJwt = function() {
  return require('express-jwt');
};
